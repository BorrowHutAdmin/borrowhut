{
  "name": "react-swiper",
  "version": "0.1.5",
  "description": "Detects and triggers touch events for swiping such as onSwipeLeft, onSwipeDown, etc. with ReactJS",
  "main": "Swiper.js",
  "scripts": {
    "build": "jsx --harmony -x jsx src/ ./"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/joakimbeng/react-swiper"
  },
  "keywords": [
    "react",
    "swipe",
    "touch",
    "event"
  ],
  "author": {
    "name": "Joakim Carlstein",
    "email": "joakim@klei.se"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/joakimbeng/react-swiper/issues"
  },
  "homepage": "https://github.com/joakimbeng/react-swiper",
  "devDependencies": {
    "react-tools": "~0.11.2"
  },
  "dependencies": {
    "object-assign": "^2.0.0"
  },
  "readme": "react-swiper\n================\n\n> Detects and triggers touch events for swiping such as onSwipeLeft, onSwipeDown, etc. with ReactJS\n\n## Installation\n\n```bash\nnpm install --save react react-swiper\n```\n\n## Usage\n\n### Example with defaults\n\nCreating an example component:\n\n```javascript\nvar React = require('react');\nvar Swiper = require('react-swiper');\n\nReact.initializeTouchEvents(true);\n\nvar Example = React.createClass({\n\n  render: function() {\n    return (\n      <Swiper className=\"swipe-container\" onSwipeLeft={this.handleLeftSwipe}>\n        Hello world!\n      </Swiper>\n    );\n  },\n\n  handleLeftSwipe: function (e) {\n    console.log(e);\n  }\n\n});\n\nmodule.exports = Example;\n```\n\nThe `Swiper` component will render a `<div/>` element by default, this can be changed either by providing the `tagName` property or the `component` property.\n\n### Example with custom element\n\nCreating a Swiper link (i.e. a swipeable `<a/>` element):\n\n```javascript\nvar React = require('react');\nvar Swiper = require('react-swiper');\n\nReact.initializeTouchEvents(true);\n\nvar Example = React.createClass({\n\n  render: function() {\n    return (\n      <Swiper tagName=\"a\" href=\"http://example.com\" onSwipe={this.handleSwipe}>\n        Swipe or click me...\n      </Swiper>\n    );\n  },\n\n  handleSwipe: function (e) {\n    console.log(e);\n  }\n\n});\n\nmodule.exports = Example;\n```\n\n### Example with custom component\n\nCreating a Swiper from another component:\n\n```javascript\nvar React = require('react');\nvar Swiper = require('react-swiper');\nvar MyComponent = require('./my-component');\n\nReact.initializeTouchEvents(true);\n\nvar Example = React.createClass({\n\n  render: function() {\n    return (\n      <Swiper component={MyComponent} propForMyComponent=\"hello world!\" onSwipe={this.handleSwipe} />\n    );\n  },\n\n  handleSwipe: function (e) {\n    console.log(e);\n  }\n\n});\n\nmodule.exports = Example;\n```\n\n## Properties\n\n### `tagName`\n\n**Type** `String`\n\n**Default** `\"div\"`\n\n\nSpecifies what type of element the `Swiper` component should be rendered as. See `component` below as well.\n\n### `component`\n\n**Type** `ReactComponent`\n\n**Default** `undefined`\n\n\nSpecifies what component `Swiper` should be rendered as. See `tagName` above as well. If both `tagName` and `component` are specified the later takes precedence.\n\n### `onSwipe`\n\n**Type** `Function(event)`\n\n**Default** `undefined`\n\n\nIf provided it's called on all swipes.\n\nExample `event`:\n\n```javascript\n{\n  type: String, // The type of swipe, e.g. \"swipeLeft\", \"swipeUp\" or \"swipeDownRight\"\n  timeStampStart: Date, // Timestamp for when the swipe was initiated\n  timeStampEnd: Date, // Timestamp for when the swipe was finished,\n  initialTouch: Touch, // A Touch object for the initial touch position - https://developer.mozilla.org/en-US/docs/Web/API/Touch\n  finalTouch: Touch, // A Touch object for the final touch position\n}\n```\n\n### `onSwipe<direction>`\n\n**Direction** `Up`, `UpRight`, `Right`, `DownRight`, `Down`, `DownLeft`, `Left` and `UpLeft`\n\n**Type** `Function(event)`\n\n**Default** `undefined`\n\n\nIf provided it's called with a swipe event (see example in `onSwipe` above) for a swipe in the wanted direction.\nE.g. `onSwipeUp` is called for swipes in the up direction.\n\n## `minSwipeLength`\n\n**Type** `Number`\n\n**Default** `75`\n\n\nThe minimum swipe length that's required for a swipe event to be triggered.\n\n## `moveThreshold`\n\n**Type** `Number`\n\n**Default** `10`\n\n\nThe minimum move length in one direction to be considered as the swipe direction, this also affects the required velocity in which the swipe must occur.\n\n\n## License\n\nMIT\n",
  "readmeFilename": "README.md",
  "_id": "react-swiper@0.1.5",
  "_from": "react-swiper@^0.1.5"
}
