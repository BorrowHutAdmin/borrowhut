'use strict';

exports.__esModule = true;

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var DigitsButton = (function (_Component) {
  _inherits(DigitsButton, _Component);

  _createClass(DigitsButton, null, [{
    key: 'propTypes',
    value: {
      consumerKey: _react2['default'].PropTypes.string.isRequired,
      label: _react2['default'].PropTypes.string,
      labelSigningIn: _react2['default'].PropTypes.string,
      onLoad: _react2['default'].PropTypes.func,
      onLoadError: _react2['default'].PropTypes.func,
      onLogin: _react2['default'].PropTypes.func.isRequired,
      onLoginFailure: _react2['default'].PropTypes.func,
      style: _react2['default'].PropTypes.object
    },
    enumerable: true
  }, {
    key: 'defaultProps',
    value: {
      label: 'Sign in with Phone',
      labelSigningIn: 'Signing In...',
      onLoad: function onLoad() {
        console.info('Digits loaded');
      },
      onLoadError: function onLoadError(err) {
        console.error('Digits failed to load', err);
      },
      style: {}
    },
    enumerable: true
  }]);

  function DigitsButton(props, context) {
    _classCallCheck(this, DigitsButton);

    _Component.call(this, props, context);

    this.state = {
      loaded: false,
      signingIn: false
    };
  }

  DigitsButton.prototype.componentDidMount = function componentDidMount() {
    var _this = this;

    this.script = document.createElement('script');
    this.script.src = 'https://cdn.digits.com/1/sdk.js';
    this.script.async = 1;

    this.script.onload = function () {
      return _this.init();
    };
    this.script.onerror = function () {
      return _this.setState({ errorLoadingDigits: true });
    };

    document.body.appendChild(this.script);
  };

  DigitsButton.prototype.componentWillUnmount = function componentWillUnmount() {
    document.body.removeChild(this.script);
  };

  DigitsButton.prototype.init = function init() {
    Digits.init({ consumerKey: this.props.consumerKey,callbackLink:'http%3A%2F%2Fwww.borrowhut.uk' }).done(this.handleLoad.bind(this)).fail(this.handleLoadError.bind(this));
  };

  DigitsButton.prototype.handleLoad = function handleLoad() {
    this.setState({ loaded: true });
    this.props.onLoad();
  };

  DigitsButton.prototype.handleLoadError = function handleLoadError(err) {
    this.props.onLoadError(err);
  };

  DigitsButton.prototype.handleClick = function handleClick() {
    this.setState({ signingIn: true });

    Digits.logIn().done(this.handleLogin.bind(this)).fail(this.handleLoginFailure.bind(this));
  };

  DigitsButton.prototype.handleLogin = function handleLogin(loginResponse) {
    this.props.onLogin(loginResponse);
    this.setState({ signingIn: false });
  };

  DigitsButton.prototype.handleLoginFailure = function handleLoginFailure(loginResponse) {
    this.setState({ signingIn: false });
    this.props.onLoginFailure(loginResponse);
  };

  DigitsButton.prototype.render = function render() {
    var _this2 = this;

    return _react2['default'].createElement(
      'button',
      {
        disabled: !this.state.loaded || this.state.signingIn,
        onClick: function () {
          return _this2.handleClick();
        },
        style: this.props.style
      },
      this.state.signingIn ? this.props.labelSigningIn : this.props.label
    );
  };

  return DigitsButton;
})(_react.Component);

exports['default'] = DigitsButton;
module.exports = exports['default'];