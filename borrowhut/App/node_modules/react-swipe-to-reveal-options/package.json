{
  "name": "react-swipe-to-reveal-options",
  "version": "0.2.3",
  "description": "Simple react.js component for a swipe-to-reveal-option item.",
  "main": "react-swipe-to-reveal-options.js",
  "peerDependencies": {
    "react": "0.x"
  },
  "scripts": {},
  "repository": {
    "type": "git",
    "url": "https://github.com/mathieudutour/react-swipe-to-reveal-options"
  },
  "keywords": [
    "react",
    "swipe-to-reveal",
    "component",
    "javascript",
    "react-component"
  ],
  "author": {
    "name": "Mathieu Dutour"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/mathieudutour/react-swipe-to-reveal-options/issues"
  },
  "homepage": "https://github.com/mathieudutour/react-swipe-to-reveal-options",
  "readme": "# react-swipe-to-reveal-options\n\n\n> Simple [React](http://facebook.github.io/react/) component for a swipe-to-reveal-option item.\n\n### [Demo](http://enkidevs.github.io/react-swipe-to-reveal-options/)\n\n[![Demo](https://cdn.rawgit.com/enki-com/react-swipe-to-reveal-options/master/example/demo.gif \"Demo\")](https://github.com/enki-com/react-swipe-to-reveal-options/blob/master/example/index.html)\n\n## Install\n\n```console\n$ npm install react-swipe-to-reveal-options --save\n```\n\nor\n\n```console\n$ bower install react-swipe-to-reveal-options --save\n```\n\n## Example\n\nControlled usage:\n\n```javascript\nvar SwipeToRevealOptions = require('react-swipe-to-reveal-options');\n\nvar App = React.createClass({\n  render() {\n    var items = [\n      {\n        leftOptions: [{\n          label: 'Trash',\n          class: 'trash'\n        }],\n        rightOptions: [{\n          label: 'Move',\n          class: 'move',\n        },{\n          label: 'Archive',\n          class: 'archive',\n        }],\n        content: \"Mail from Mathieu\",\n        callActionWhenSwipingFarLeft: true,\n        callActionWhenSwipingFarRight: true\n      },\n      {\n        leftOptions: [{\n          label: 'Trash',\n          class: 'trash'\n        }],\n        rightOptions: [{\n          label: 'Move',\n          class: 'move',\n        },{\n          label: 'Archive',\n          class: 'archive',\n        }],\n        content: \"Mail from Arseny\",\n        callActionWhenSwipingFarRight: true,\n        callActionWhenSwipingFarLeft: false\n      },\n      {\n        leftOptions: [{\n          label: 'Trash',\n          class: 'trash'\n        }],\n        rightOptions: [{\n          label: 'Move',\n          class: 'move',\n        },{\n          label: 'Archive',\n          class: 'archive',\n        }],\n        content: \"Mail from Bruno\",\n        callActionWhenSwipingFarRight: false,\n        callActionWhenSwipingFarLeft: false\n      }\n    ];\n    return (\n      <div>\n        items.map(function(item) {\n          return (\n            <SwipeToRevealOptions\n              leftOptions={item.leftOptions}\n              rightOptions={item.rightOptions}\n              callActionWhenSwipingFarRight={item.callActionWhenSwipingFarRight}\n              callActionWhenSwipingFarLeft={item.callActionWhenSwipingFarLeft}\n            >\n              {item.content}\n            </SwipeToRevealOptions>\n          );\n        })\n      </div>\n    );\n  },\n\n});\n```\n\n## API\n\n### Props\n\nAll props are optional.\n\n##### rightOptions\n\nArray of objects defining the options on the right. Each object need a `label` (which can be html) and a `class`. Default to [].\n\n##### leftOptions\n\nArray of objects defining the options on the left. Each object need a `label` (which can be html) and a `class`. Default to [].\n\n##### className\n\nClass of the Component\n\n##### actionThreshold\n\nThreshold (in px) before which the default action (if any, see `callActionWhenSwipingFar`) is called. Default to 300.\n\n##### visibilityThreshold\n\nThreshold (in px) before which the options are visible. Default to 50.\n\n##### transitionBackTimeout\n\nTimeout (in ms) of the transition to the default state. Default to 400.\n\n##### callActionWhenSwipingFarLeft\n\nBoolean defining if swiping far to the left should called the right most option. Default to false.\n\n##### callActionWhenSwipingFarRight\n\nBoolean defining if swiping far to the right should called the left most option. Default to false.\n\n##### closeOthers\n\nFunction called when swiping. Useful to close other items in a list.\n\n##### onRightClick\n\nFunction called when clicking on an option on the right. Received the clicked option as an argument.\n\nAlso called swiping far to the left (if applicable).\n\n##### onLeftClick\n\nFunction called when clicking on an option on the left. Received the clicked option as an argument.\n\nAlso called swiping far to the right (if applicable).\n\n##### onReveal\n\nFunction called when showing options once the swipe is over. Receive `'left'` or `'right'`as an argument.\n\n##### maxItemWidth\n\nMaximum width (in px) of an option. Default to 120.\n\n##### parentWidth\n\nWidth of the parent (in px). Default to the size of the screen.\n\n### Methods\n\n##### close()\n\nHide the options.\n\n##### revealLeft()\n\nReveal the left options.\n\n##### revealRight()\n\nReveal the right options.\n\n## Styles\n\nLook at [react-swipe-to-reveal-options.css](https://github.com/enki-com/react-swipe-to-reveal-options/blob/master/react-swipe-to-reveal-options.css) for an idea on how to style this component.\n\n## Contribute\n\nTo build form source:\n\n```console\n$ gulp\n```\n\n---\n\nMIT Licensed\n",
  "readmeFilename": "README.md",
  "_id": "react-swipe-to-reveal-options@0.2.3",
  "_from": "react-swipe-to-reveal-options@^0.2.0"
}
